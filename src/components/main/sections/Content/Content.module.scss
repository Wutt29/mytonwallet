@use "../../../../styles/mixins";

@use "../../../../styles/scssVariables" as v;

.contentPanel,
.landscapeContentPanel,
.container {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;

  &.landscapeContainer {
    overflow: hidden;
  }
}

.assetsPanel {
  overflow: hidden;
  flex-shrink: 0;

  margin-bottom: 0.75rem;
  border-radius: var(--border-radius-default);

  background: var(--color-background-first);

  .portraitContainer & {
    width: 100%;
    max-width: v.$portraitContentMaxWidth;
    margin: 0 auto 1rem;
  }
}

.tabsContainer {
  position: relative;
  z-index: 2;
  flex-shrink: 0;
  height: 2.75rem;

  @include mixins.transition(background-color 150ms);

  .portraitContainer & {
    --color-background-first: transparent;

    position: sticky;
    top: var(--sticky-card-height);
    width: 100%;

    :global(html.is-electron:not(.is-linux)) & {
      top: calc(var(--sticky-card-height) - var(--electron-header-height));
    }
  }
}

.tabsContainerStuck {
  background-color: var(--color-background-tab-bar);
  backdrop-filter: saturate(180%) blur(20px);
}

.tabsContent {
  .portraitContainer & {
    width: 100%;
    margin: 0 auto;
  }
}

.tabs {
  .landscapeContainer & {
    padding: 0.75rem 0.75rem 0.25rem;
    border-radius: var(--border-radius-default) var(--border-radius-default) 0 0;
    background-color: var(--color-background-first);
  }
}

.tabsOverlay {
  .landscapeContainer & {
    top: 0.75rem;
    padding: 0 0.75rem;
  }
}

.tabs,
.tabsOverlay {
  .portraitContainer & {
    display: inline-flex;
    max-width: 100%;
    padding: 0 1.5rem;
  }
}

.tabsSlide {
  text-align: center;
}

.tab {
  flex: 0 0 auto;

  .landscapeContainer & {
    padding-right: 0;
    padding-left: 0;
  }

  .portraitContainer & {
    padding: 0.75rem 0 0.25rem;
  }
}

.slides {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;

  border-radius: 0 0 var(--border-radius-default) var(--border-radius-default);

  background: var(--color-background-first);

  .landscapeContainer & {
    flex-grow: 1;
  }

  @include mixins.respond-below(xs) {
    @supports (padding-bottom: var(--safe-area-bottom)) {
      padding-bottom: calc(var(--bottombar-height) + var(--safe-area-bottom)) !important;
    }
  }
}

.slide {
  overflow: hidden;
  overflow-y: scroll;
}

.portraitContainer {
  .slides {
    flex: 1 1 auto;
    max-width: v.$portraitContentMaxWidth;
    min-height: calc(100vh - 6.5rem) !important;
    margin: 0 auto;

    :global(html.with-safe-area-top) & {
      min-height: calc(100vh - 5.375rem - var(--status-bar-height, 0px)) !important;
    }

    // Fix for opera, dead zone of 37 pixels in extension window on Windows
    :global(html.is-windows.is-opera.is-extension) & {
      min-height: calc(100vh - 7.5rem) !important;
    }

    :global(html:not(.with-safe-area-bottom)) & {
      border-radius: 0;
    }
  }

  .slide {
    overflow: hidden;
    flex: 1 1 auto;
    min-height: 0;
  }
}

.landscapeContentPanel {
  overflow: hidden;
}

.contentPanel {
  position: relative;

  flex-grow: 1;

  margin: 0 -0.75rem;
  margin-inline-end: calc(-0.75rem + var(--scrollbar-width));
  border-radius: var(--border-radius-content) var(--border-radius-content) 0 0;

  background: var(--color-background-first);

  @supports (margin-inline-end: max(0px, 1px)) {
    margin-inline-end: max(-0.75rem, calc(-0.75rem + var(--scrollbar-width)));
  }
}
